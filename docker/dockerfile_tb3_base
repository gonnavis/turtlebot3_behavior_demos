# Base Image for TurtleBot3 Simulation
FROM nvidia_ros:latest
SHELL ["/bin/bash", "-c"]

# Install basic apt packages
RUN apt-get update && apt-get install -y \
 git libcanberra-gtk-module libcanberra-gtk3-module libqt5svg5-dev \
 python3-pip python3-opencv python3-tk python3-pyqt5.qtwebengine

# Install additional Python modules
RUN pip3 install transforms3d

# Install additional ROS packages
RUN apt-get install -y \
 ros-foxy-gazebo-* \
 ros-foxy-cartographer \
 ros-foxy-cartographer-ros \
 ros-foxy-navigation2 \
 ros-foxy-nav2-bringup

# Create Colcon workspace with TurtleBot3 packages
RUN mkdir -p /turtlebot3_ws/src \
 && cd /turtlebot3_ws/src \
 && git clone -b foxy-devel https://github.com/ROBOTIS-GIT/turtlebot3.git \
 && git clone -b foxy-devel https://github.com/ROBOTIS-GIT/turtlebot3_msgs.git \
 && git clone -b foxy-devel https://github.com/ROBOTIS-GIT/turtlebot3_simulations.git \
 && git clone -b foxy-devel https://github.com/ROBOTIS-GIT/DynamixelSDK.git

# Install py_trees and related packages.
# NOTE: For now, using a personal fork of py_trees_ros for some slight interface changes.
RUN cd /turtlebot3_ws/src \
 && git clone -b devel https://github.com/splintered-reality/py_trees.git \
 && git clone -b devel https://github.com/splintered-reality/py_trees_js.git \
 && git clone -b devel https://github.com/sea-bass/py_trees_ros.git \
 && git clone -b devel https://github.com/splintered-reality/py_trees_ros_interfaces.git \
 && git clone -b devel https://github.com/splintered-reality/py_trees_ros_viewer.git

# Install Groot for visualizing behavior trees from BehaviorTree.CPP.
# TODO: For now, using a personal fork of Groot for autoconnect and port specification.
RUN cd /turtlebot3_ws/src \
 && git clone -b scastro/monitor_port_connect_args https://github.com/sea-bass/Groot.git groot \
 && cd groot \
 && git submodule update --init --recursive

# Build the base Colcon workspace
RUN cd /turtlebot3_ws \
 && source /opt/ros/foxy/setup.bash \
 && colcon build --symlink-install

# Remove display warnings
RUN mkdir /tmp/runtime-root
ENV XDG_RUNTIME_DIR "/tmp/runtime-root"
ENV NO_AT_BRIDGE 1

# Set up the work directory and entrypoint
WORKDIR /turtlebot3_ws
COPY ./docker/entrypoint.sh /
ENTRYPOINT [ "/entrypoint.sh" ]
